framework:
  messenger:
    transports:
      sw_ti_integration:
        dsn: '%env(INTEGRATION_MESSENGER_TRANSPORT_DSN)%'
        serializer: 'app.messenger.transport.integration_event_serializer'
        retry_strategy:
          max_retries: 10
          delay: 2000
        options:
          flushTimeout: 10000
          flushRetries: 5
          topic:
            name: "events"
          kafka_conf:
            enable.auto.offset.store: 'false'
            group.id: 'my-group-id' # should be unique per consumer
            security.protocol: 'plaintext'
      sw_ti_integration_log:
        dsn: '%env(INTEGRATION_MESSENGER_TRANSPORT_DSN)%'
        serializer: 'app.messenger.transport.integration_event_serializer'
        retry_strategy:
          max_retries: 10
          delay: 2000
        options:
          flushTimeout: 10000
          flushRetries: 5
          topic:
            name: "events"
          kafka_conf:
            enable.auto.offset.store: 'false'
            group.id: 'my-group-id' # should be unique per consumer
            security.protocol: 'plaintext'
      ti_sw_integration:
        dsn: '%env(INTEGRATION_MESSENGER_TRANSPORT_DSN)%'
        serializer: 'app.messenger.transport.integration_event_serializer'
        retry_strategy:
          max_retries: 10
          delay: 2000
        options:
          commitAsync: true
          receiveTimeout: 10000
          topic:
            name: "events"
          kafka_conf:
            enable.auto.offset.store: 'false'
            group.id: 'my-group-id' # should be unique per consumer
            security.protocol: 'plaintext'
          topic_conf:
            auto.offset.reset: 'earliest'
      ti_sw_integration_log:
        dsn: '%env(INTEGRATION_MESSENGER_TRANSPORT_DSN)%'
        serializer: 'app.messenger.transport.integration_event_serializer'
        retry_strategy:
          max_retries: 10
          delay: 2000
        options:
          commitAsync: true
          receiveTimeout: 10000
          topic:
            name: "events"
          kafka_conf:
            enable.auto.offset.store: 'false'
            group.id: 'my-group-id' # should be unique per consumer
            security.protocol: 'plaintext'
          topic_conf:
            auto.offset.reset: 'earliest'

    routing:
      'App\Messaging\Messages\Event\Integration\Timcheh\ProducerAsyncMessageInterface': sw_ti_integration
      'App\Messaging\Messages\Event\Integration\Timcheh\ProducerAsyncLogMessageInterface': sw_ti_integration_log
      'App\Messaging\Messages\Event\Integration\Timcheh\ConsumerAsyncMessageInterface': ti_sw_integration
      'App\Messaging\Messages\Event\Integration\Timcheh\ConsumerAsyncLogMessageInterface': ti_sw_integration_log
