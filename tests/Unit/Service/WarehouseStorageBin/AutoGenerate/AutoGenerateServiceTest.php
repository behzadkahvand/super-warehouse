<?php

namespace App\Tests\Unit\Service\WarehouseStorageBin\AutoGenerate;

use App\DTO\WarehouseStorageBinAutoGenerateData;
use App\Service\WarehouseStorageBin\AutoGenerate\AutoGenerateService;
use App\Service\WarehouseStorageBin\AutoGenerate\Handlers\AddHandler;
use App\Service\WarehouseStorageBin\AutoGenerate\Handlers\EditHandler;
use Mockery;
use Mockery\Adapter\Phpunit\MockeryTestCase;

final class AutoGenerateServiceTest extends MockeryTestCase
{
    public function testItCanPerform(): void
    {
        $data = new WarehouseStorageBinAutoGenerateData();

        $addHandlerMock = Mockery::mock(AddHandler::class);
        $addHandlerMock->shouldReceive('supports')
                       ->once()
                       ->with($data)
                       ->andReturnFalse();

        $editHandleMock = Mockery::mock(EditHandler::class);
        $editHandleMock->shouldReceive('supports')
                       ->once()
                       ->with($data)
                       ->andReturnTrue();
        $editHandleMock->shouldReceive('handle')
                       ->once()
                       ->with($data)
                       ->andReturn([]);

        $autoGenerateService = new AutoGenerateService([$addHandlerMock, $editHandleMock]);
        $result              = $autoGenerateService->perform($data);

        self::assertEmpty($result);
    }
}
