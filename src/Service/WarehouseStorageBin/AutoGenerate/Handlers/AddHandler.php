<?php

namespace App\Service\WarehouseStorageBin\AutoGenerate\Handlers;

use App\Dictionary\StorageBinAutoGenerationActionTypeDictionary;
use App\DTO\WarehouseStorageBinAutoGenerateData;
use App\Service\WarehouseStorageBin\AutoGenerate\Creators\CreatorInterface;
use Doctrine\ORM\EntityManagerInterface;

final class AddHandler implements HandlerInterface
{
    public function __construct(private EntityManagerInterface $manager, private iterable $creators)
    {
    }

    public function supports(WarehouseStorageBinAutoGenerateData $data): bool
    {
        return $data->getActionType() === StorageBinAutoGenerationActionTypeDictionary::ADD;
    }

    public function handle(WarehouseStorageBinAutoGenerateData $data): array
    {
        $result = [];

        /** @var CreatorInterface $creator */
        foreach ($this->creators as $creator) {
            if ($creator->supports($data)) {
                $result = array_merge($result, $creator->create($data));
            }
        }
        $this->manager->flush();

        return $result;
    }
}
